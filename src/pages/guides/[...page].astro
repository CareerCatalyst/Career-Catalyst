---
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import { Card, Pagination } from "accessible-astro-components";
import { Icon } from "astro-icon";

const { src = "/astronaut-hero-img.webp" } = Astro.props;

export async function getStaticPaths({ paginate }) {
  const response = await fetch("https://jsonplaceholder.typicode.com/posts");
  const data = await response.json();

  return paginate(data, { pageSize: 6 });
}

const { page } = Astro.props;
---

<DefaultLayout
  title="guides"
  description="An example of a guides with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <div class="background"></div>
  <section class="my-12">
    <!-- <div class="space-content container">
      <h1>topics</h1>
      <p class="text-2xl">
        An example of a topics with dynamic content fetched from <a
          href="https://jsonplaceholder.typicode.com/posts">JSONPlaceholder</a
        > using the title, body and userId. The Accessible Astro Card Component is
        used here to display al the posts.
      </p>
    </div> -->
    <section class="hero my-19">
      <div class="container">
        <div class="items-center gap-24 lg:grid-cols-2">
          <div class="flex flex-col items-center gap-8 md:items-start">
            <h5 class="text-center text-6xl md:text-left lg:text-7xl">
              <div>
                <span class="text-gradient"
                  >Designed to provide new professionals with the resources and
                  tools they need to succeed in their careers.</span
                >
              </div>
            </h5>
            <div class="flex flex-col gap-3 min-[500px]:flex-row"></div>
          </div>

          <div class="flex flex-col gap-3 min-[500px]:flex-row">
            <a class="button has-icon" href="/">
              <Icon pack="ion" name="star-outline" />
              See a random article
            </a>
          </div>
        </div>
      </div>
    </section>
    <section class="cards my-12">
      <div class="container">
        <p class="text-sm">
          <em
            >Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em
          >
        </p>
        <ul class="my-3">
          {
            page.data.map((post) => (
              <li>
                <Card
                  url={
                    "/topics/" + post.title.replaceAll(" ", "-").toLowerCase()
                  }
                  title={post.title}
                  footer={"userId:" + post.userId}
                >
                  {post.body}
                </Card>
              </li>
            ))
          }
        </ul>
        <div class="mt-12 grid place-content-center">
          <Pagination
            firstPage={page.url.prev ? "/topics" : null}
            previousPage={page.url.prev ? page.url.prev : null}
            nextPage={page.url.next ? page.url.next : null}
            lastPage={page.url.next
              ? `/topics/${Math.round(page.total / page.size)}`
              : null}
            currentPage={page.currentPage}
            totalPages={Math.round(page.total / page.size)}
          />
        </div>
      </div>
    </section>
  </section>

  <style lang="scss">
    ul {
      display: grid;
      grid-template-columns: 1fr;
      grid-gap: 4rem;

      @media (min-width: 550px) {
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 2rem;
      }

      @media (min-width: 950px) {
        grid-template-columns: repeat(3, 1fr);
      }
    }

    .background {
      background: url("../src/assets/img/gradient2.webp") no-repeat center
        center;
      background-size: cover;
      height: 47.438rem;
      //div is in the back of the hero
      z-index: -1;
      position: relative;
      margin-bottom: -44em;
      top: -9.5em;
      width: 100%;
      height: 750px;
      filter: contrast(1.2) brightness(0.6) saturate(1.2) opacity(0.9);
    }

    .text-gradient {
      // color: var(--primary-600);
      color: #f4f1d0;
      font-weight: bold;
    }

    .container {
      max-width: 1200px;
    }
    .cards {
      margin-top: 20em;
    }

    .button {
      box-sizing: border-box;

      width: 500.59px;
      height: 80.59px;

      border: 1px solid #9ba0b3;
      box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.25);
      border-radius: 11.56px;

      /* Inside auto layout */

      flex: none;
      order: 1;
      flex-grow: 0;
    }
  </style>
</DefaultLayout>
